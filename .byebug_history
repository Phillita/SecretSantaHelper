c
secret_santa_participants.joins(ArelHelpers.join_association(SecretSantaParticipant, :secret_santa_participant_exceptions, Arel::Nodes::OuterJoin)).where(SecretSantaParticipant[:id].not_eq(participant.id).and(SecretSantaParticipantException[:user_id].not_eq(participant.user_id).or(SecretSantaParticipantException[:id].eq(nil))))
c
secret_santa_participants.joins(ArelHelpers.join_association(SecretSantaParticipant, :secret_santa_participant_exceptions, Arel::Nodes::OuterJoin)).where(SecretSantaParticipant[:id].not_eq(participant.id).and(SecretSantaParticipantException[:user_id].not_eq(participant.user_id)))
c
secret_santa_participants.joins(ArelHelpers.join_association(SecretSantaParticipant, :secret_santa_participant_exceptions, Arel::Nodes::OuterJoin)).where(SecretSantaParticipantException[:user_id].not_eq(secret_santa_participants.first.user_id).or(SecretSantaParticipantException[:id].eq(nil)))
secret_santa_participants.joins(ArelHelpers.join_association(SecretSantaParticipant, :secret_santa_participant_exceptions, Arel::Nodes::OuterJoin)).where(SecretSantaParticipantException[:user_id].not_eq(participant.user_id).or(SecretSantaParticipantException[:id].eq(nil)))
secret_santa_participants.joins(ArelHelpers.join_association(SecretSantaParticipant, :secret_santa_participant_exceptions, Arel::Nodes::OuterJoin)).where.not(secret_santa_participant_exceptions: { user_id: secret_santa_participants.first.user_id })
secret_santa_participants.joins(ArelHelpers.join_association(SecretSantaParticipant, :secret_santa_participant_exceptions, Arel::Nodes::OuterJoin)).where.not(secret_santa_participant_exceptions: { user_id: participant.user_id }).any?
c
secret_santa_participants.joins(:secret_santa_participant_exceptions).where.not(secret_santa_participant_exceptions: { user_id: secret_santa_participants.first.user_id })
secret_santa_participants.joins(:secret_santa_participant_exceptions).where.not(secret_santa_participant_exceptions: { user_id: secret_santa_participants.first.secret_santa_participant.user_id })
secret_santa_participants.joins(:secret_santa_participant_exceptions).where.not(secret_santa_participant_exceptions: { user_id: secret_santa_participants.first.participant.user_id })
secret_santa_participants.joins(:secret_santa_participant_exceptions).where.not(secret_santa_participant_exceptions: { user_id: secret_santa_participants.joins.first.participant.user_id })
secret_santa_participants.joins(:secret_santa_participant_exceptions).where.not(secret_santa_participant_exceptions: { user_id: participant.user_id })
n
s
participants_can_all_be_matched?
secret_santa_participants.any?
c
secret_santa.user_id
secret_santa.user
c
secret_santa.reload
secret_santa.reload!
secret_santa.user_id
secret_santa.user
c
user
user_id_changed?
c
user_id_changed?
user.nil?
c
secret_santa.reload
secret_santa.user
secret_santa
secret_santa.user_id
secret_santa.secret_santa_participants
n
secret_santa.user
c
f.object.secret_santa_participants
f.object
c
exception.message
n
User.find_by(email: secret_santa_params[:user_attributes][:email])
n
c
Users.find_by(email: secret_santa_params[:user_attributes][:email])
n
step == 2
c
eval step
step == 1
c
eval step
step
n
c
guest.present?
c
guest.present?
c
guest.present?
c
guest.present?
c
guest.present?
c
guest.present?
guest
   31:   end
guest.present?
c
self
c
self
guest
c
f.object.build_user
f.object.user.build
f.object.user
f.object
n
